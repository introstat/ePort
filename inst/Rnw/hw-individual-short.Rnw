\documentclass[12pt,english,nohyper]{tufte-handout}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{longtable}
\usepackage{wrapfig}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage[space]{grffile}
\usepackage{geometry}
\usepackage{pgffor}
\usepackage{calc}
\usepackage{enumitem}
\usepackage{microtype}
\usepackage{tabularx}

\begin{document}

% Font of caption must be specified, otherwise gray
\setcaptionfont{
  \normalfont\footnotesize
  \color{black}
}

<<include=FALSE>>=
suppressPackageStartupMessages(library(knitr, quietly=TRUE))
opts_chunk$set(
concordance=TRUE
)
@

<<setup, echo=FALSE>>=
suppressPackageStartupMessages(library(ggplot2, quietly=TRUE))
suppressPackageStartupMessages(library(reshape2, quietly=TRUE))
suppressPackageStartupMessages(library(xtable, quietly=TRUE))
suppressPackageStartupMessages(library(plyr, quietly=TRUE))
suppressPackageStartupMessages(library(dplyr, quietly=TRUE))
suppressPackageStartupMessages(library(stringr, quietly=TRUE))

# Specify directory for figure output
if (!keepImage){
  temppath <- normalizePath(tempdir(), winslash = '/')
  opts_chunk$set(fig.path = temppath) 
}else{
  opts_chunk$set(fig.path = paste0(outFile,"/"))
}

a=sum(answerkey$simplekey$X..in.Set[!duplicated(answerkey$simplekey$Question.Set)])
nQuestion = nrow(answerkey$simplekey)
rows = nrow(sumry1)
plotprename=gsub('\\.','_',gsub('\\.csv$','',basename(Score_filename)))
@

\centerline{\Large\bf \Sexpr{className} Homework Short Report
for \Sexpr{gsub("([a-zA-Z])([0-9])","\\1 \\2",gsub("_","
",plotprename))}}
\vspace{1cm}

<<histScore, echo=FALSE, fig.env = "marginfigure", out.width = "0.98\\linewidth", fig.cap = paste("Histogram of scores. Blue data represent scores less than", lowScore, "percent."),fig.lp = "mar:">>=
ms=sumry1$FullScore[1]
print(qplot(TotalScore,data=sumry1,na.rm = T, geom='histogram',fill=factor(TotalScore<ms*.8),binwidth=1,main='',xlim=c(0,ms+1)) + theme(legend.position="none", axis.text = element_text(size=rel(1.5)), axis.title = element_text(size = rel(1.5))) + labs(x="Total Score", y = "Count"))
@

<<echo=FALSE,results='asis'>>=
su=c(
  Mean=paste(format(mean(sumry1$TotalScore, na.rm=T),nsmall=2,digits=2),sep=""),
  Std.dev=paste(format(sd(sumry1$TotalScore,
na.rm=T),nsmall=2,digits=2),sep=""),
  ' '=NA,
  Min=paste(format(min(sumry1$TotalScore, na.rm=T),nsmall=2,digits=2),sep=""),
  Q1 = paste(format(quantile(sumry1$TotalScore,0.25,na.rm=T),nsmall=2,digits=2),sep=""),
  Median=paste(format(median(sumry1$TotalScore,
na.rm=T),nsmall=2,digits=2),sep=""),
  Q3 = paste(format(quantile(sumry1$TotalScore,0.75,na.rm=T),nsmall=2,digits=2),sep=""),
  Max=paste(format(max(sumry1$TotalScore, na.rm=T),nsmall=2,digits=2),sep=""))
su2=c(
  paste("(", format(mean(sumry1$TotalScore/sumry1$FullScore[1]*100,
na.rm=T),digits=2),"%)",sep=""),
  paste("(",format(sd(sumry1$TotalScore/sumry1$FullScore[1]*100,
na.rm=T),digits=2),"%)",sep=""),
  NA,
  paste("(",format(min(sumry1$TotalScore/sumry1$FullScore[1]*100,
na.rm=T),digits=2),"%)", sep=""),
  paste("(",format(quantile(sumry1$TotalScore/sumry1$FullScore[1]*100,0.25,na.rm=T,names=FALSE),digits=2),"%)",
sep=""),
  paste("(",format(median(sumry1$TotalScore/sumry1$FullScore[1]*100,
na.rm=T),digits=2),"%)", sep=""),
  paste("(",format(quantile(sumry1$TotalScore/sumry1$FullScore[1]*100,0.75,na.rm=T,names=FALSE),digits=2),"%)",
sep=""),
  paste("(",format(max(sumry1$TotalScore/sumry1$FullScore[1]*100,
na.rm=T),digits=2),"%)", sep=""))
su = rbind(su,su2)
print(xtable(su,caption='Summary statistics of the scores',
label='tab:summary'),floating=FALSE, tabular.environment =
"longtable",include.rownames=FALSE)
@

<<echo=FALSE,warning=FALSE,results='asis'>>=
Total=sumry1[,1,drop=FALSE]
colnames(Total)='% Correct'
Total[,1]=sumry1$TotalScore/sumry1$FullScore*100
Total=Total[Total[,1]<lowScore,1,drop=FALSE]

Total = cbind(Row.Names = rownames(Total), Total)
totalLowScore = nrow(Total)

smallNR = totalLowScore %/% 4
bigNR = totalLowScore %% 4

if (totalLowScore < 4){
  nr = 1
  if (totalLowScore ==1){
    dfFull = Total[(1:nr),]
    names(dfFull) = c(" ","% Correct")
    row.names(dfFull) = NULL
  }
  if (totalLowScore ==2){
    df1 = Total[(1:nr),]
    df2 = Total[(nr+1):(2*nr),]
    dfFull = data.frame(df1,df2)
    names(dfFull) = c(" ","% Correct"," ","% Correct")
    row.names(dfFull) = NULL
  }
  if (totalLowScore ==3){
    df1 = Total[(1:nr),]
    df2 = Total[(nr+1):(2*nr),]
    df3 = Total[(2*nr+1):(3*nr),]
    dfFull = data.frame(df1,df2,df3)
    names(dfFull) = c(" ","% Correct"," ","% Correct"," ","% Correct")
    row.names(dfFull) = NULL
  }
} else {
  if (bigNR !=0){
    for (i in 1:(4-bigNR)){
      temprow <- matrix(c(rep.int(NA,length(data))),nrow=1,ncol=length(Total))
      newrow <- data.frame(temprow)
      colnames(newrow) <- colnames(Total)
      Total <- rbind(Total,newrow)
      #Total = rbind(Total,c(" "," "))
    }
    Total[,2] = as.numeric(Total[,2])
  }
  nr = nrow(Total)/4
  df1 = Total[(1:nr),]
  df2 = Total[(nr+1):(2*nr),]
  df3 = Total[(2*nr+1):(3*nr),]
  df4 = Total[(3*nr+1):(4*nr),]
  dfFull = data.frame(df1,df2,df3,df4)
  names(dfFull) = c(" ","% Correct"," ","% Correct"," ","% Correct","
","% Correct")
  row.names(dfFull) = NULL
}
@

\newif\ifPositive

<<condtion2, echo = FALSE, results = "asis">>=
if (nrow(Total) > 0) {
  cat("\\Positivetrue")
} else {
  cat("\\Positivefalse")
}
@

\ifPositive
Each of the \Sexpr{rows} students were given \Sexpr{a} questions from
a bank of \Sexpr{nQuestion} questions. Figure \ref{mar:histScore} and
Table \ref{tab:summary} give the overall summary of student
performance. Table \ref{tab:studentsbelow80} lists the \Sexpr{totalLowScore}
students who scored below \Sexpr{lowScore} percent on the assignment. Table
\ref{tab:QuestionSet_summary} and Figure \ref{fig:LearningObj_summary}
provide summary statistics of the scores per question set and learning
outcome.
\else
Each of the \Sexpr{rows} students were given \Sexpr{a} questions from
a bank of \Sexpr{nQuestion} questions. Figure \ref{mar:histScore} and
Table \ref{tab:summary} give the overall summary of student
performance. Table \ref{tab:QuestionSet_summary} and Figure
\ref{fig:LearningObj_summary} provide summary statistics of the scores
per question set and learning outcome.
\fi

\bigskip{}

\begin{fullwidth}
\makeatletter\setlength\hsize{\@tufte@fullwidth}\makeatother
<<echo=FALSE,results='asis'>>=
if (nrow(Total) > 0){
  if (totalLowScore ==1){
    x.big <- xtable(dfFull, label ='tab:studentsbelow80',caption = paste('The
student whose percentage is less than', lowScore, '\\%.'),align = c("rrr"))
  }
  if (totalLowScore ==2){
    x.big <- xtable(dfFull, label ='tab:studentsbelow80',caption =paste('The
2 students whose percentage is less than', lowScore, '\\%.'),align =
c("rrr|lr"))
  }
  if (totalLowScore ==3){
    x.big <- xtable(dfFull, label ='tab:studentsbelow80',caption =paste('The
3 students whose percentage is less than', lowScore, '\\%.'),align =
c("rrr|lr|lr"))
  }
  if (totalLowScore > 3){
    x.big <- xtable(dfFull, label ='tab:studentsbelow80',caption
=paste("The ", totalLowScore, "students whose percentages are less than",
lowScore, "\\%."),align = c("rrr|lr|lr|lr"))
  }
print(x.big, tabular.environment ='longtable', floating = FALSE,
include.rownames=FALSE)
}
@
\end{fullwidth}

<<echo=FALSE,warning=FALSE,results='asis'>>=
emailaddress = paste0(rownames(Total),'@iastate.edu')
write.table(c("With semicolon:","",
  paste(emailaddress,collapse='; '),
  "","","With comma:","",
  paste(emailaddress,collapse=', ')),
  file=paste0(outFile,"/",className,"hwk_",plotprename,"_lowScore.txt"),
  quote=FALSE,row.names=FALSE,col.names=FALSE)
@

\vspace{-2mm}

\noindent
\underline{Topic \Sexpr{gsub("[a-zA-Z_]","",plotprename)} Learning Outcomes:}
\vspace{2mm}

\begin{fullwidth}
\begin{enumerate}[label=\Alph*.,itemsep=-\parsep,leftmargin=*]
  \item
<<results="asis", echo=FALSE>>=
  cat(chapter_outcomes, sep="\n\\item ")
@
\end{enumerate}
\end{fullwidth}

<<LearningObj_summary, echo=FALSE, out.width = "0.98\\linewidth", fig.cap = "Fluctuation diagram of percentage correct by learning outcome. Mean scores are drawn as blue bars.">>=
LOsumry=t(sumry2$ConceptCorrectPct)
LOsumry=data.frame(LOsumry[,1:2]," "=NA," "=NA,LOsumry[,3:5], check.names=FALSE)
LOsumry=LOsumry[order(LOsumry$Mean,decreasing=TRUE),]
LOsumryorder=rownames(LOsumry)

output1 = data.frame(t(apply(Student_SetScore$ObjectiveSet$ConceptSetScore,1,`/`,Student_SetScore$ObjectiveSet$CSFullScore))[,LOsumryorder])
output1 = melt(output1, id=0)
output1$variable = factor(as.character(output1$variable),levels=LOsumryorder)
output1$value = output1$value*100

sumVarVal <- dplyr::summarise(group_by(output1,variable,value),Count=n())
means=LOsumry$Mean
sumVarVal$mean = means[as.numeric(sumVarVal$variable)]

print(ggplot(sumVarVal, aes(variable, value)) + geom_point(aes(size = Count), pch=15) + guides(fill=guide_legend(title="New")) + theme(legend.background = element_rect(fill="gray90", size=.5, colour = "black"), legend.text=element_text(size=rel(1.3)), legend.title=element_text(size=rel(1.3), face="plain"), legend.position="bottom", axis.text = element_text(size=rel(1.3)), axis.title = element_text(size = rel(1.3))) + labs(x="Learning Outcome", y = "Percentage Grade") + geom_errorbar(stat = "summary", fun.y = "mean", width=0.6, colour = "blue", size = 1, aes(ymax=..y..,ymin=..y.., y = mean)))

@

% TEMPORARY
\pagebreak
% TEMPORARY

\vspace{5mm}

\begin{fullwidth}
\makeatletter\setlength\hsize{\@tufte@fullwidth}\makeatother
<<echo=FALSE,results='asis'>>=
Qsetkey = unique(answerkey[[2]][,c(3,4,9)])
rownames(Qsetkey) = Qsetkey[,2]
colnames(Qsetkey) = c('LO','Qset','\\#')
Qsetsumry = cbind(Qsetkey,t(sumry2$SetCorrectPct))
Qsetsumry = Qsetsumry[order(Qsetsumry$Mean,decreasing=TRUE),]
Qsetsumry$Mean[Qsetsumry$Mean<lowScore] =
paste0('\\color{red}{',Qsetsumry$Mean[Qsetsumry$Mean<lowScore],'}')

x.big <- xtable(Qsetsumry, label='tab:QuestionSet_summary',
caption=paste('Summary statistics of the question sets. Rows are sorted by
mean scores, which are marked red if less than', lowScore, 'percent.'),
align=c("lcc|ccc|ccc"))

print(x.big, tabular.environment = "longtable", floating=FALSE,
include.rownames=FALSE,sanitize.text.function=identity)
@
\end{fullwidth}

\end{document}
